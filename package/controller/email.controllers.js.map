{"version":3,"sources":["../src/controller/email.controllers.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA,2CAAgE;AAChE,4DAAwD;AAGxD,IAAa,gBAAgB,GAA7B;IACE,YACyC,YAA0B;QAA1B,iBAAY,GAAZ,YAAY,CAAc;IAChE,CAAC;IAQI,YAAY,CAAS,IAA0F;;YAEnH,MAAM,EAAC,QAAQ,EAAE,GAAG,EAAE,KAAK,EAAE,MAAM,EAAE,aAAa,EAAC,GAAK,IAAI,CAAC;YAC7D,OAAO,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,QAAQ,EAAE,GAAG,EAAE,KAAK,EAAE,MAAM,EAAE,aAAa,CAAC,CAAC;QAClF,CAAC;KAAA;CACJ,CAAA;AALG;IADC,aAAI,CAAC,cAAc,CAAC;IACD,WAAA,aAAI,EAAE,CAAA;;;;oDAIzB;AAfQ,gBAAgB;IAD5B,mBAAU,CAAC,OAAO,CAAC;IAGf,WAAA,eAAM,CAAC,4BAAY,CAAC,CAAA;qCAAgC,4BAAY;GAFxD,gBAAgB,CAgB5B;AAhBY,4CAAgB","file":"email.controllers.js","sourcesContent":["import { Body, Controller, Inject, Post } from \"@nestjs/common\";\nimport { EmailService } from \"../service/email.service\";\n\n@Controller(\"email\")\nexport class EmailControllers {\n  constructor(\n    @Inject(EmailService) private readonly emailService: EmailService,\n  ) {}\n\n  /**\n   * 发送短信\n   * @param {{emailModule: EmailModuleEntity; emailUser: EmailUserEntity[]; sender: string}} data\n   * @returns {Promise<{code: number; message: string}>}\n   */\n    @Post(\"emailMessage\")\n    async emailMessage(@Body() data: {mContent: any, mid: number, email: [string], sender: string, emailConfigId: number}): Promise<{ code: number, message:\n      string }> {\n      const {mContent, mid, email, sender, emailConfigId}  =  data;\n      return this.emailService.sendEmail(mContent, mid, email, sender, emailConfigId);\n    }\n}\n"]}